{"version":3,"sources":["../../../src/infra/http/http.module.ts"],"sourcesContent":["import { Module } from '@nestjs/common';\n\nimport { CreateUserUseCase } from '@app/application/contact-center/use-case/create-user';\nimport { GetUserUseCase } from '@app/application/contact-center/use-case/get-user';\nimport { VoiceProviderModule } from '../voice-provider/voice-provider.module';\nimport { TwilioWebSocketGateway } from './gateways/twilio.gateway';\nimport { VonageWebSocketGateway } from './gateways/vonage.gateway';\nimport { UserController } from './controllers/user.controller';\nimport { VonageController } from './controllers/vonage.controller';\nimport { TwilioController } from './controllers/twilio.controller';\n\n@Module({\n  imports: [VoiceProviderModule],\n  controllers: [UserController, VonageController, TwilioController],\n  providers: [TwilioWebSocketGateway,VonageWebSocketGateway, CreateUserUseCase, GetUserUseCase],\n  exports: [],\n})\nexport class HttpModule { }\n// In this case we will have two websockets paths in the same port but we can have only one using this code\n//https://stackoverflow.com/questions/74879717/conditionally-instantiate-service-class-as-a-provider-in-nestjs\n/*\nproviders: [\n    {\n      provide: \"UserService\",\n      inject: [REQUEST, UserSuperAdminService, UserAdminService],\n      useFactory: (request: Request, superAdminService: UserSuperAdminService, adminService: UserAdminService) => UserServiceFactory(request, superAdminService, adminService)\n    }\n...\n]\n*/ "],"names":["HttpModule","Module","imports","VoiceProviderModule","controllers","UserController","VonageController","TwilioController","providers","TwilioWebSocketGateway","VonageWebSocketGateway","CreateUserUseCase","GetUserUseCase","exports"],"mappings":";;;;+BAiBaA;;;eAAAA;;;wBAjBU;4BAEW;yBACH;qCACK;+BACG;+BACA;gCACR;kCACE;kCACA;;;;;;;AAQ1B,IAAA,AAAMA,aAAN,MAAMA;AAAa,EAC1B,2GAA2G;CAC3G,8GAA8G;CAC9G;;;;;;;;;AASA;AAZaA;IANZC,IAAAA,cAAM,EAAC;QACNC,SAAS;YAACC,wCAAmB;SAAC;QAC9BC,aAAa;YAACC,8BAAc;YAAEC,kCAAgB;YAAEC,kCAAgB;SAAC;QACjEC,WAAW;YAACC,qCAAsB;YAACC,qCAAsB;YAAEC,6BAAiB;YAAEC,uBAAc;SAAC;QAC7FC,SAAS,EAAE;IACb;GACab"}