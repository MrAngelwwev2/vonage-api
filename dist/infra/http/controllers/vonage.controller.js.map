{"version":3,"sources":["../../../../src/infra/http/controllers/vonage.controller.ts"],"sourcesContent":["import { CreateUserUseCase } from '@app/application/contact-center/use-case/create-user';\nimport {\n    Body,\n    Controller,\n    Get,\n    Post,\n    Res,\n    HttpStatus,\n    Req\n} from '@nestjs/common';\nimport { CreateUserDto } from '../dto/create-user.dto';\nimport { GetUserUseCase } from '@app/application/contact-center/use-case/get-user';\nimport { ApiTags } from '@nestjs/swagger';\nimport { Response, Request } from 'express';\nimport { CreateCallDto } from '../dto/create-call.dto';\n\n\n@Controller('/vonage')\n@ApiTags('Vonage')\nexport class VonageController {\n    constructor(\n        private createUserUseCase: CreateUserUseCase,\n        private getUserUseCase: GetUserUseCase\n    ) { }\n\n    @Get('/answer')\n    getAnswerCall(@Req() req: Request, @Res() res: Response) {\n        const nccoResponse = [\n            {\n              action: 'connect',\n              from: 'Vonage',\n              endpoint: [\n                {\n                  type: 'websocket',\n                  uri: `wss://${req.hostname}/socket/clientLeg?conversationUUID=${req.query.conversation_uuid}`,\n                  'content-type': 'audio/l16;rate=16000',\n                },\n              ],\n            },\n          ];\n        return res.status(HttpStatus.OK).json(nccoResponse)\n    }\n\n    @Post('/events')\n    finishCall(@Req() req: Request, @Res() res: Response) {\n        if (req.body.status === 'completed' && req.body.direction === 'inbound') {\n            // delete the websocket connection\n          }\n        return res.status(HttpStatus.OK);\n    }\n\n    @Post('/outbound-call')\n    createOutboundCall(@Body() call: CreateCallDto, @Res() res: Response) {\n        \n        return res.status(HttpStatus.OK);\n    }\n\n\n}"],"names":["VonageController","getAnswerCall","req","res","nccoResponse","action","from","endpoint","type","uri","hostname","query","conversation_uuid","status","HttpStatus","OK","json","finishCall","body","direction","createOutboundCall","call","constructor","createUserUseCase","getUserUseCase","Get","Req","Res","Post","Body","Controller","ApiTags"],"mappings":";;;;+BAmBaA;;;eAAAA;;;4BAnBqB;wBAS3B;yBAEwB;yBACP;yBACU;+BACJ;;;;;;;;;;;;;;;AAKvB,IAAA,AAAMA,mBAAN,MAAMA;IAOTC,cAAc,AAAOC,GAAY,EAAE,AAAOC,GAAa,EAAE;QACrD,MAAMC,eAAe;YACjB;gBACEC,QAAQ;gBACRC,MAAM;gBACNC,UAAU;oBACR;wBACEC,MAAM;wBACNC,KAAK,CAAC,MAAM,EAAEP,IAAIQ,QAAQ,CAAC,mCAAmC,EAAER,IAAIS,KAAK,CAACC,iBAAiB,CAAC,CAAC;wBAC7F,gBAAgB;oBAClB;iBACD;YACH;SACD;QACH,OAAOT,IAAIU,MAAM,CAACC,kBAAU,CAACC,EAAE,EAAEC,IAAI,CAACZ;IAC1C;IAGAa,WAAW,AAAOf,GAAY,EAAE,AAAOC,GAAa,EAAE;QAClD,IAAID,IAAIgB,IAAI,CAACL,MAAM,KAAK,eAAeX,IAAIgB,IAAI,CAACC,SAAS,KAAK,WAAW;QACrE,kCAAkC;QACpC;QACF,OAAOhB,IAAIU,MAAM,CAACC,kBAAU,CAACC,EAAE;IACnC;IAGAK,mBAAmB,AAAQC,IAAmB,EAAE,AAAOlB,GAAa,EAAE;QAElE,OAAOA,IAAIU,MAAM,CAACC,kBAAU,CAACC,EAAE;IACnC;IAnCAO,YACI,AAAQC,iBAAoC,EAC5C,AAAQC,cAA8B,CACxC;aAFUD,oBAAAA;aACAC,iBAAAA;IACR;AAmCR;;IAjCKC,IAAAA,WAAG,EAAC;IACUC,aAAAA,IAAAA,WAAG;IAAkBC,aAAAA,IAAAA,WAAG;;;eAAb,gBAAO,4BAAP,gBAAO;eAAc,iBAAQ,4BAAR,iBAAQ;;;GAP9C3B;;IAwBR4B,IAAAA,YAAI,EAAC;IACMF,aAAAA,IAAAA,WAAG;IAAkBC,aAAAA,IAAAA,WAAG;;;eAAb,gBAAO,4BAAP,gBAAO;eAAc,iBAAQ,4BAAR,iBAAQ;;;GAzB3C3B;;IAgCR4B,IAAAA,YAAI,EAAC;IACcC,aAAAA,IAAAA,YAAI;IAAyBF,aAAAA,IAAAA,WAAG;;;eAAnB,4BAAa,4BAAb,4BAAa;eAAc,iBAAQ,4BAAR,iBAAQ;;;GAjC3D3B;AAAAA;IAFZ8B,IAAAA,kBAAU,EAAC;IACXC,IAAAA,gBAAO,EAAC;;;eAG0B,6BAAiB,4BAAjB,6BAAiB;eACpB,uBAAc,4BAAd,uBAAc;;GAHjC/B"}