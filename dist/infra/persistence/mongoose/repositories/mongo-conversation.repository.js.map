{"version":3,"sources":["../../../../../src/infra/persistence/mongoose/repositories/mongo-conversation.repository.ts"],"sourcesContent":["\nimport { ConversationRepository } from \"@app/application/contact-center/ports/conversation.repository\";\nimport { Conversation } from \"@app/domain/contact-center/conversation\";\nimport { Injectable } from \"@nestjs/common\";\nimport { InjectModel } from \"@nestjs/mongoose\";\nimport mongoose, { Model } from \"mongoose\";\nimport { Conversation as ConversationMongoose } from \"../entities/conversation.entity\";\n\n@Injectable()\nexport class MongooseConversationRepository implements ConversationRepository {\n    constructor(\n        @InjectModel(ConversationMongoose.name) private readonly userModel: Model<ConversationMongoose>,\n    ) { }\n    find(): Promise<Conversation[]> {\n        throw new Error(\"Method not implemented.\");\n    }\n    save(): Promise<string> {\n        throw new Error(\"Method not implemented.\");\n    }\n\n    \n}\n"],"names":["MongooseConversationRepository","find","Error","save","constructor","userModel","Injectable","InjectModel","ConversationMongoose","name"],"mappings":";;;;+BASaA;;;eAAAA;;;wBANc;0BACC;2BACI;oCACqB;;;;;;;;;;;;;;;AAG9C,IAAA,AAAMA,iCAAN,MAAMA;IAITC,OAAgC;QAC5B,MAAM,IAAIC,MAAM;IACpB;IACAC,OAAwB;QACpB,MAAM,IAAID,MAAM;IACpB;IARAE,YACI,AAAyDC,SAAsC,CACjG;aAD2DA,YAAAA;IACzD;AASR;AAZaL;IADZM,IAAAA,kBAAU;IAGFC,aAAAA,IAAAA,qBAAW,EAACC,gCAAoB,CAACC,IAAI;;;eAA8B,gBAAK,4BAAL,gBAAK;;GAFpET"}