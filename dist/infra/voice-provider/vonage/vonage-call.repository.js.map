{"version":3,"sources":["../../../../src/infra/voice-provider/vonage/vonage-call.repository.ts"],"sourcesContent":["import { EnvService } from \"@app/infra/env\";\nimport { Injectable } from \"@nestjs/common\";\nimport { VonageService } from \"./vonage.service\";\nimport { Vonage } from \"@vonage/server-sdk\";\nimport { ConversationRepository } from \"@app/application/contact-center/ports/conversation.repository\";\nimport { Conversation } from \"@app/domain/contact-center/conversation\";\nimport { number } from \"zod\";\n\n@Injectable()\nexport class VonageCallRepository implements ConversationRepository {\n    private vonage: Vonage;\n\n    constructor(\n        private vonageService: VonageService,\n        private envService: EnvService\n    ) {\n        this.vonage = this.vonageService.getInstance();\n    }\n\n    async makeCall(agentPhoneNumber: string, callerPhoneNumber: string): Promise<string> {\n\n        try {\n            const call = {\n                to: [{\n                    type: 'phone',\n                    number: callerPhoneNumber\n                }],\n                from: [{\n                    type: 'phone',\n                    number: agentPhoneNumber\n                }],\n                ncco: [{\n                    action: 'talk',\n                    text: 'This is a text to speech call from Vonage'\n                }]\n            };\n\n            const callResult = await this.vonage.voice.createOutboundCall(call);\n            console.log('Call initiated, UUID:', callResult.uuid);\n            return \"done\";\n        } catch (error) {\n            console.error('Error: ', error)\n        }\n\n    }\n\n    find(): Promise<Conversation[]> {\n        throw new Error(\"Method not implemented.\");\n    }\n\n    save(): Promise<string> {\n        throw new Error(\"Method not implemented.\");\n    }\n\n}"],"names":["VonageCallRepository","makeCall","agentPhoneNumber","callerPhoneNumber","call","to","type","number","from","ncco","action","text","callResult","vonage","voice","createOutboundCall","console","log","uuid","error","find","Error","save","constructor","vonageService","envService","getInstance","Injectable"],"mappings":";;;;+BASaA;;;eAAAA;;;qBATc;wBACA;+BACG;;;;;;;;;;AAOvB,IAAA,AAAMA,uBAAN,MAAMA;IAUT,MAAMC,SAASC,gBAAwB,EAAEC,iBAAyB,EAAmB;QAEjF,IAAI;YACA,MAAMC,OAAO;gBACTC,IAAI;oBAAC;wBACDC,MAAM;wBACNC,QAAQJ;oBACZ;iBAAE;gBACFK,MAAM;oBAAC;wBACHF,MAAM;wBACNC,QAAQL;oBACZ;iBAAE;gBACFO,MAAM;oBAAC;wBACHC,QAAQ;wBACRC,MAAM;oBACV;iBAAE;YACN;YAEA,MAAMC,aAAa,MAAM,IAAI,CAACC,MAAM,CAACC,KAAK,CAACC,kBAAkB,CAACX;YAC9DY,QAAQC,GAAG,CAAC,yBAAyBL,WAAWM,IAAI;YACpD,OAAO;QACX,EAAE,OAAOC,OAAO;YACZH,QAAQG,KAAK,CAAC,WAAWA;QAC7B;IAEJ;IAEAC,OAAgC;QAC5B,MAAM,IAAIC,MAAM;IACpB;IAEAC,OAAwB;QACpB,MAAM,IAAID,MAAM;IACpB;IAxCAE,YACI,AAAQC,aAA4B,EACpC,AAAQC,UAAsB,CAChC;aAFUD,gBAAAA;aACAC,aAAAA;QAER,IAAI,CAACZ,MAAM,GAAG,IAAI,CAACW,aAAa,CAACE,WAAW;IAChD;AAqCJ;AA7Ca1B;IADZ2B,IAAAA,kBAAU;;;eAKoB,4BAAa,4BAAb,4BAAa;eAChB,eAAU,4BAAV,eAAU;;GALzB3B"}